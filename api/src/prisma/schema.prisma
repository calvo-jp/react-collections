generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int        @id @unique @default(autoincrement())
  name            String
  email           String     @unique
  emailVerifiedAt DateTime?
  avatar          String?
  password        String
  createdAt       DateTime   @default(now()) @db.Timestamptz()
  updatedAt       DateTime   @updatedAt @db.Timestamptz()
  recipes         Recipe[]
  reviews         Review[]
  favorites       Favorite[]

  @@map(name: "users")
}

model Recipe {
  id          Int        @id @unique @default(autoincrement())
  name        String
  description String
  tags        String[]
  avatar      String?
  banner      String?
  // once author deletes thier account, thier recipes will be deleted, too.
  author      User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId    Int
  createdAt   DateTime   @default(now()) @db.Timestamptz()
  updatedAt   DateTime   @updatedAt @db.Timestamptz()
  reviews     Review[]
  hearts      Favorite[]

  @@map(name: "recipes")
}

model Review {
  id        Int      @id @unique @default(autoincrement())
  body      String
  rate      Int
  // reviews from author who deleted thier account are still valid
  author    User?    @relation(fields: [authorId], references: [id], onDelete: SetNull)
  authorId  Int?
  // reviews related to a deleted recipes will be removed
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId  Int
  createdAt DateTime @default(now()) @db.Timestamptz()
  updatedAt DateTime @updatedAt @db.Timestamptz()

  @@map(name: "reviews")
}

model Favorite {
  id        Int      @id @unique @default(autoincrement())
  // hearts from users who deleted thier accounts no longer counts
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  // users should see something like "Content no longer available"
  // incase one thier favorited recipes has been deleted
  recipe    Recipe?  @relation(fields: [recipeId], references: [id], onDelete: SetNull)
  recipeId  Int?
  createdAt DateTime @default(now()) @db.Timestamptz()

  @@map(name: "favorites")
}
